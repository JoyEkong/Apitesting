{
	"info": {
		"_postman_id": "1c618f77-edfd-44d2-81df-9226d796ce08",
		"name": "API Automation Webinar",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET all employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91d05a34-9e9c-48b6-80e9-c08356e7b2d7",
						"exec": [
							"//Confirm Status 200 OK\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Contains the word success\r",
							"pm.test(\"Body has the word success\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"success\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/employees",
					"host": [
						"{{url}}"
					],
					"path": [
						"employees"
					]
				},
				"description": "Get all employee data"
			},
			"response": []
		},
		{
			"name": "GET single employee data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "73b1103f-c3a4-402d-9f32-9793f7a9f3db",
						"exec": [
							"//Status carries the word success\r",
							"pm.test(\"Status body contains  the word success\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"success\");\r",
							"});\r",
							"\r",
							"//Confirm Status 200\r",
							"pm.test(\"Confimr Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/employee/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"employee",
						"1"
					]
				},
				"description": "GET Single employee data"
			},
			"response": []
		},
		{
			"name": "Create new record",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1936e060-0310-4e49-be88-d8cbae492381",
						"exec": [
							"//status should be success\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"//status code should be 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"success\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/create",
					"host": [
						"{{url}}"
					],
					"path": [
						"create"
					]
				},
				"description": "Create new record in database"
			},
			"response": []
		},
		{
			"name": "Update Record",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d4828ff6-024a-489f-b533-9dd57a4a19a3",
						"exec": [
							"//status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Status is OK\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"//message reads \"Successfully! Record has been updated.\"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Successfully! Record has been updated.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/update/21",
					"host": [
						"{{url}}"
					],
					"path": [
						"update",
						"21"
					]
				},
				"description": "Update an employee record"
			},
			"response": []
		},
		{
			"name": "Delete Record",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cc5c8e75-0cfa-4a37-a863-2c1468e6d469",
						"exec": [
							"//status is OK\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"//data id is 2\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"2\");\r",
							"});\r",
							"//message\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Successfully! Record has been deleted\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/delete/2",
					"host": [
						"{{url}}"
					],
					"path": [
						"delete",
						"2"
					]
				},
				"description": "Delete an employee record"
			},
			"response": []
		},
		{
			"name": "Post",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}https://reqres.in/\n",
					"protocol": "{{url}}https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"\n"
					]
				},
				"description": "Post request task"
			},
			"response": []
		},
		{
			"name": "Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8324a9d5-a96f-41bd-a233-6586430e0dd7",
						"exec": [
							"//STATUS is 201\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Joy\",\r\n    \"job\": \"Digital Merchandizing\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "fdc49b29-b8ba-425e-ac23-86b3e2d4b7e0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "272abf3d-1147-4936-bc46-d281feeafaac",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c7124c8d-f03f-4292-b6b3-f85cf694202c",
			"key": "url",
			"value": "http://dummy.restapiexample.com/api/v1"
		}
	],
	"protocolProfileBehavior": {}
}